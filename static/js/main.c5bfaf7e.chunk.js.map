{"version":3,"sources":["hooks/useLocalStorageReducer.js","reducers/todos.reducer.js","constants/actions.js","contexts/todos.context.js","hooks/useInputState.js","styles/TodoFormStyles.js","components/TodoForm.js","styles/EditTodoFormStyles.js","components/EditTodoForm.js","styles/TodoStyles.js","components/Todo.js","hooks/useToggleState.js","components/TodoList.js","components/TodoApp.js","helpers/sizes.js","styles/AppStyles.js","components/App.js","index.js"],"names":["useLocalStorageReducer","key","reducer","defaultValue","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","state","dispatch","useEffect","setItem","stringify","action","type","id","uuidv4","task","completed","filter","todo","map","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","todosReducer","todos","Provider","children","initialValue","useState","setValue","target","makeStyles","TodoForm","width","marginBottom","input","height","background","border","borderBottom","color","fontSize","fontWeight","outline","classes","useStyles","useContext","useInputState","handleChange","clearValue","onSubmit","preventDefault","className","placeholder","onChange","EditTodoForm","transition","transform","toggleEditForm","autoFocus","onClick","stopPropagation","Todo","display","alignItems","justifyContent","paddingLeft","lineHeight","overflowX","cursor","opacity","icons","marginRight","float","memo","setState","toggle","useToggleState","isEditing","style","overflowY","textDecoration","TodoList","TodoApp","size","xs","md","App","margin","sizes","header","textAlign","link","backfaceVisibility","position","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5bfaf7e.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\n\nfunction useLocalStorageReducer(key, reducer, defaultValue) {\n  const [state, dispatch] = useReducer(reducer, defaultValue, () => {\n    let value;\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultValue)\n      );\n    } catch (e) {\n      value = defaultValue;\n    }\n    return value;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, dispatch];\n}\n\nexport default useLocalStorageReducer;\n","import { v4 as uuidv4 } from 'uuid'\nimport {\n  ADD_TODO,\n  REMOVE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n} from '../constants/actions'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, { id: uuidv4(), task: action.task, completed: false }]\n    case REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.id)\n    case TOGGLE_TODO:\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      )\n    case EDIT_TODO:\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, task: action.task } : todo\n      )\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\n","import React, { createContext } from 'react';\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\nimport todosReducer from '../reducers/todos.reducer';\n\nconst defaultTodos = [\n  { id: '0', task: 'Read a book', completed: false },\n  { id: '1', task: 'Jog in a playground', completed: true },\n  { id: '2', task: 'Write articles', completed: false }\n];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n  const [todos, dispatch] = useLocalStorageReducer(\n    'todos',\n    todosReducer,\n    defaultTodos\n  );\n\n  return (\n    <TodosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </TodosContext.Provider>\n  );\n}\n","import { useState } from 'react';\n\nexport default initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = e => setValue(e.target.value);\n  const clearValue = () => setValue('');\n\n  return [value, handleChange, clearValue];\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  TodoForm: {\n    width: '100%',\n    marginBottom: '1rem'\n  },\n  input: {\n    width: '100%',\n    height: '2rem',\n    background: 'none',\n    border: 'none',\n    borderBottom: '1px solid #34495e',\n    color: '#34495e',\n    fontSize: '1.2rem',\n    fontWeight: '300',\n    outline: 'none'\n  }\n});\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useInputState from '../hooks/useInputState';\nimport useStyles from '../styles/TodoFormStyles';\nimport { ADD_TODO } from '../constants/actions';\n\nfunction TodoForm() {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, clearValue] = useInputState('');\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({ type: ADD_TODO, task: value });\n        clearValue();\n      }}\n      className={classes.TodoForm}\n    >\n      <input\n        placeholder=\"Add your task here...\"\n        value={value}\n        onChange={handleChange}\n        className={classes.input}\n      />\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  EditTodoForm: {\n    width: '100%',\n    marginBottom: '1rem'\n  },\n  input: {\n    width: '85%',\n    background: 'transparent',\n    border: 'none',\n    borderBottom: '1px solid #ccc',\n    fontSize: '1rem',\n    transition: '0.6s',\n    transform: 'translateY(8px)',\n    '&:focus': {\n      borderBottom: '1px solid #58b2dc',\n      outline: 'none'\n    }\n  }\n});\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useInputState from '../hooks/useInputState';\nimport useStyles from '../styles/EditTodoFormStyles.js';\nimport { EDIT_TODO } from '../constants/actions';\n\nfunction EditTodoForm({ id, task, toggleEditForm }) {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, clearValue] = useInputState(task);\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({ type: EDIT_TODO, id, task: value });\n        toggleEditForm();\n        clearValue();\n      }}\n      className={classes.EditTodoForm}\n    >\n      <input\n        autoFocus\n        value={value}\n        onChange={handleChange}\n        onClick={e => e.stopPropagation()}\n        className={classes.input}\n      />\n    </form>\n  );\n}\n\nexport default EditTodoForm;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  Todo: {\n    width: '100%',\n    height: '2.5rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: '0.5rem',\n    color: '#34495e',\n    fontSize: '1rem',\n    lineHeight: '2.5rem',\n    overflowX: 'hidden',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      background: 'rgba(0, 0, 0, 0.03)',\n      cursor: 'pointer'\n    },\n    '&:hover div': {\n      opacity: '1'\n    }\n  },\n  icons: {\n    width: '40px',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginRight: '1rem',\n    float: 'right',\n    transition: 'all 0.3s',\n    opacity: '0'\n  }\n});\n","import React, { useContext, memo } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport EditTodoForm from './EditTodoForm';\nimport useToggleState from '../hooks/useToggleState';\nimport useStyles from '../styles/TodoStyles.js';\nimport { REMOVE_TODO, TOGGLE_TODO } from '../constants/actions';\n\nfunction Todo({ id, task, completed }) {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n\n  if (isEditing) {\n    return (\n      <li\n        className={classes.Todo}\n        style={{ overflowY: 'hidden' }}\n        onClick={() => toggle()}\n      >\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n      </li>\n    );\n  }\n\n  return (\n    <li\n      className={classes.Todo}\n      onClick={() => dispatch({ type: TOGGLE_TODO, id })}\n    >\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : '',\n          color: completed ? '#bdc3c7' : '#34495e'\n        }}\n      >\n        {task}\n      </span>\n      <div className={classes.icons}>\n        <i\n          style={{ color: '#c0392b' }}\n          className=\"fas fa-trash\"\n          onClick={e => {\n            e.stopPropagation();\n            dispatch({ type: REMOVE_TODO, id });\n          }}\n        />\n        <i\n          style={{ color: '#58b2dc' }}\n          className=\"fas fa-pen\"\n          onClick={e => {\n            e.stopPropagation();\n            toggle();\n          }}\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default memo(Todo);\n","import { useState } from 'react';\n\nexport default (initialValue = false) => {\n  const [state, setState] = useState(initialValue);\n  const toggle = () => setState(!state);\n\n  return [state, toggle];\n};\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../contexts/todos.context';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n\n  return (\n    <ul style={{ paddingLeft: 10, width: '95%' }}>\n      {todos.map(todo => (\n        <Todo key={todo.id} {...todo} />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport { TodosProvider } from '../contexts/todos.context';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\n\nfunction TodoApp() {\n  return (\n    <TodosProvider>\n      <TodoForm />\n      <TodoList />\n    </TodosProvider>\n  );\n}\n\nexport default TodoApp;\n","export default {\n  down(size) {\n    const sizes = {\n      xs: '575.98px',\n      md: '991.98px'\n    };\n\n    return `@media (max-width: ${sizes[size]})`;\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport sizes from '../helpers/sizes';\n\nexport default makeStyles({\n  App: {\n    width: '50%',\n    margin: '0 auto',\n    [sizes.down('md')]: {\n      width: '70%'\n    },\n    [sizes.down('xs')]: {\n      width: '90%'\n    }\n  },\n  header: {\n    textAlign: 'center',\n    '& h1': {\n      color: '#2c3e50',\n      margin: '5vh 0 0 0',\n      fontSize: '5rem',\n      fontWeight: '300',\n      '& span': {\n        fontWeight: '700'\n      },\n      [sizes.down('xs')]: {\n        fontSize: '4.5rem'\n      }\n    },\n    '& h2': {\n      color: '#9aa1a5',\n      fontSize: '1rem',\n      fontWeight: '300',\n      [sizes.down('xs')]: {\n        fontSize: '0.6rem'\n      }\n    }\n  },\n  link: {\n    display: 'flex',\n    justifyContent: 'center',\n    backfaceVisibility: 'hidden',\n    color: '#81b3d2',\n    fontSize: '0.7rem',\n    position: 'relative',\n    textDecoration: 'none',\n    transition: '0.5s color ease'\n  }\n});\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport useStyles from '../styles/AppStyles';\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.App}>\n      <header className={classes.header}>\n        <h1>\n          todo<span>list</span>\n        </h1>\n        <h2>A simple todolist app built with React Hooks & Context</h2>\n      </header>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}